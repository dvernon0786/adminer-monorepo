# .github/workflows/deploy-wait-and-smoke.yml
name: Deploy Wait & Smoke

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read

env:
  PROD_APEX: https://adminer.online
  PROD_WWW: https://www.adminer.online

jobs:
  deploy-wait-and-smoke:
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      # Guards: required files exist
      - name: Guard files
        run: |
          set -euo pipefail
          [[ -f adminer/vercel.json ]] || (echo "adminer/vercel.json missing" && exit 1)
          [[ -f scripts/smoke.sh ]] || (echo "scripts/smoke.sh missing" && exit 1)

      # Optionally wait for Vercel (only if token is present)
      - name: Fetch Vercel deployment URL (optional)
        id: vercel
        if: env.VERCEL_TOKEN != '' && env.VERCEL_PROJECT_ID != ''
        run: |
          set -euo pipefail
          base="https://api.vercel.com/v6/deployments?projectId=${VERCEL_PROJECT_ID}"
          if [[ -n "${VERCEL_TEAM_ID}" ]]; then base="${base}&teamId=${VERCEL_TEAM_ID}"; fi
          # Try up to 10 times
          for i in {1..10}; do
            resp=$(curl -fsSL --connect-timeout 10 --max-time 20 "$base") && break || sleep 5
          done
          url=$(node -e "const x=${resp}; const d=x.deployments?.[0]; if(!d) process.exit(1); console.log(d.url)")
          echo "url=https://${url}" >> "$GITHUB_OUTPUT"

      - name: Decide BASE_URL
        id: decide
        run: |
          if [[ -n "${{ steps.vercel.outputs.url }}" ]]; then
            echo "BASE_URL=${{ steps.vercel.outputs.url }}" >> "$GITHUB_OUTPUT"
          else
            # Fallback to production apex domain
            echo "BASE_URL=https://adminer.online" >> "$GITHUB_OUTPUT"
          fi

      - name: Show BASE_URL
        run: echo "BASE_URL=${{ steps.decide.outputs.BASE_URL }}"

      - name: Make smoke executable
        run: chmod +x scripts/smoke.sh

      - name: Smoke
        env:
          BASE_URL: ${{ steps.decide.outputs.BASE_URL }}
          APEX_URL: https://adminer.online
          WWW_URL: https://www.adminer.online
        run: bash scripts/smoke.sh 