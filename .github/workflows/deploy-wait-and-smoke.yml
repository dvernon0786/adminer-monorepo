# .github/workflows/deploy-wait-and-smoke.yml
name: Deploy Wait & Smoke

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

env:
  PROD_APEX: https://adminer.online
  PROD_WWW: https://www.adminer.online

jobs:
  smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set Node (just to run script tools)
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Verify required files exist (guards)
        run: |
          set -euo pipefail
          FILES=("adminer/apps/api/vercel.json" "scripts/smoke.sh" "scripts/smoke-local.env.example")
          for f in "${FILES[@]}"; do
            [[ -f "$f" ]] || { echo "❌ Missing $f"; exit 1; }
            echo "Found: $f"
          done

      - name: Resolve target (prod vs preview)
        id: target
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env=production" >> $GITHUB_OUTPUT
          else
            echo "env=preview" >> $GITHUB_OUTPUT
          fi

      - name: Fetch Vercel deployment URL
        id: vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TEAM_ID: ${{ secrets.VERCEL_TEAM_ID }}
        run: |
          set -euo pipefail
          ENV="${{ steps.target.outputs.env }}"

          # Query latest deployment for this commit/branch
          if [[ "$ENV" == "production" ]]; then
            FILTER="target=production&state=READY"
          else
            # Filter by branch for PRs
            BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
            FILTER="target=preview&state=READY&meta-githubCommitRef=${BRANCH}"
          fi

          API="https://api.vercel.com/v6/deployments?projectId=${VERCEL_PROJECT_ID}&teamId=${VERCEL_TEAM_ID}&${FILTER}&limit=1"
          JSON=$(curl -fsS -H "Authorization: Bearer ${VERCEL_TOKEN}" "$API")
          URL=$(echo "$JSON" | node -e "let j = JSON.parse(fs.readFileSync(0)); console.log((j.deployments?.[0]?.url)||'');")
          if [[ -z "$URL" || "$URL" == "undefined" ]]; then
            echo "❌ No READY deployment found yet."
            exit 1
          fi
          echo "url=https://${URL}" >> $GITHUB_OUTPUT

      - name: Smoke (preview/prod)
        env:
          BASE_URL: ${{ steps.vercel.outputs.url }}
          APEX_URL: ${{ env.PROD_APEX }}
          WWW_URL: ${{ env.PROD_WWW }}
        run: |
          echo "Testing BASE_URL=$BASE_URL"
          bash scripts/smoke.sh 