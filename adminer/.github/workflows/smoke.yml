name: Production Smoke Tests

on:
  # Run automatically when Vercel posts a successful deploy to GitHub
  deployment_status:
  # Allow manual runs too
  workflow_dispatch:

jobs:
  smoke:
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'deployment_status' &&
       github.event.deployment_status.state == 'success')
    runs-on: ubuntu-latest

    env:
      BASE_URL: https://www.adminer.online

    steps:
      - name: Show trigger context
        run: |
          echo "Event: ${{ github.event_name }}"
          if [ "${{ github.event_name }}" = "deployment_status" ]; then
            echo "Deployment state: ${{ github.event.deployment_status.state }}"
            echo "Environment: ${{ github.event.deployment_status.environment }}"
            echo "Target URL: ${{ github.event.deployment_status.target_url }}"
          fi

      - name: Install jq (if missing)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq

      - name: 1) Health check
        run: |
          set -euo pipefail
          URL="$BASE_URL/api/consolidated?action=health"
          echo "GET $URL"
          code=$(curl -sS -o /tmp/health.json -w "%{http_code}" "$URL")
          cat /tmp/health.json
          test "$code" = "200"
          jq -e '.ok == true and .healthy == true' </tmp/health.json >/dev/null

      - name: 2) Quota (unauthenticated) must be 401
        run: |
          set -euo pipefail
          URL="$BASE_URL/api/consolidated?action=quota/status"
          echo "GET $URL (unauthenticated)"
          code=$(curl -sS -o /tmp/quota_unauth.json -w "%{http_code}" "$URL")
          echo "Status: $code"
          cat /tmp/quota_unauth.json
          test "$code" = "401"

      - name: 3) Dodo webhook signature path works (synthetic org)
        if: ${{ secrets.DODO_SECRET != '' }}
        env:
          DODO_SECRET: ${{ secrets.DODO_SECRET }}
        run: |
          set -euo pipefail
          ORG_ID="org_ci_smoke"
          BODY=$(jq -cn --arg org "$ORG_ID" '{type:"subscription.updated", orgId:$org, plan:"pro"}')
          SIG=$(printf "%s" "$BODY" | openssl dgst -sha256 -hmac "$DODO_SECRET" -r | cut -d' ' -f1)
          URL="$BASE_URL/api/dodo/webhook"
          echo "POST $URL"
          code=$(curl -sS -o /tmp/webhook.json -w "%{http_code}" \
                 -H "Content-Type: application/json" \
                 -H "dodo-signature: $SIG" \
                 -d "$BODY" "$URL")
          cat /tmp/webhook.json
          # Accept 200 (ideal) or 409/4xx only if payload is rejected with clear error.
          test "$code" = "200"
          jq -e '.ok == true and .orgId == "org_ci_smoke"' </tmp/webhook.json >/dev/null

      - name: 4) (Optional) Quota (authenticated) expects 200/402
        if: ${{ secrets.CLERK_TEST_JWT != '' }}
        env:
          CLERK_TEST_JWT: ${{ secrets.CLERK_TEST_JWT }}
        run: |
          set -euo pipefail
          URL="$BASE_URL/api/consolidated?action=quota/status"
          echo "GET $URL (authenticated via Bearer)"
          # NOTE: This works only if your auth() accepts Authorization: Bearer <session token>.
          code=$(curl -sS -o /tmp/quota_auth.json -w "%{http_code}" \
                 -H "Authorization: Bearer $CLERK_TEST_JWT" "$URL")
          echo "Status: $code"
          cat /tmp/quota_auth.json
          # Under quota → 200, exceeded → 402
          if [ "$code" = "200" ] || [ "$code" = "402" ]; then
            exit 0
          else
            echo "Unexpected status for authenticated quota: $code"
            exit 1
          fi 